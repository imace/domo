/*
 * Copyright 2011 Richard Nichols.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package $config.javaPackage$;

import com.visural.domo.util.ClassUtil;
import com.visural.domo.condition.CombineTerms;
import com.visural.domo.condition.FieldCondition;
import com.visural.domo.condition.NumberFieldCondition;
import com.visural.domo.condition.ComparableFieldCondition;
import com.visural.domo.condition.StringFieldCondition;
import com.visural.domo.condition.TableOrViewCondition;

/**
 * Generated code
 * 
 * @author Richard Nichols
 */
public class $data.conditionClassName$ extends TableOrViewCondition<$data.conditionClassName$> {   

    protected $data.conditionClassName$(CombineTerms terms) {
        super(terms);
    }

$data.vars:{
    public final $it.conditionType$<$if(it.variableTypeCondition)$$it.type$, $endif$$data.conditionClassName$> $it.javaName$ = 
        new $it.conditionType$<$if(it.variableTypeCondition)$$it.type$, $endif$$data.conditionClassName$>(this, ClassUtil.getSqlField($data.className$.class,"$it.javaName$"));
}$
}
